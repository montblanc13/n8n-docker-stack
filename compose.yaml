name: "n8n-automation"

#------------------------------------------------------------------------------
#
# NETWORKS
#
# -----------------------------------------------------------------------------
networks:
  n8n_network:
    external: true

#------------------------------------------------------------------------------
#
# VOLUMES
#
# -----------------------------------------------------------------------------
volumes:
  n8n_data:
    external: true
  redis_data:
    external: true
  pgvector_data:
    external: true

#------------------------------------------------------------------------------
#
# SERVICES
#
# -----------------------------------------------------------------------------
services:


  n8n:
    image: n8nio/n8n:latest
    container_name: n8n-engine
    restart: unless-stopped
    expose:
      - "5678"
    environment:
      - N8N_HOST=${DOMAIN_NAME}
      - N8N_PORT=${PORT}
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_SECURITY_COOKIE_SECURE=true
      - N8N_ENABLE_COMMUNITY_NODES=true
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
      - N8N_RUNNERS_ENABLED=true
      # Logging
      - N8N_LOG_LEVEL=info
      - N8N_LOG_FILE_LOCATION=/files/logs/n8n.logs
      - N8N_LOG_OUTPUT=console,file
      - N8N_LOG_FILE_SIZE_MAX=20
      - N8N_LOG_FILE_COUNT_MAX=10
      # Execution Configuration
      - EXECUTIONS_DATA_PRUNE=true
      - EXECUTIONS_DATA_MAX_AGE=48
      - EXECUTIONS_DATA_PRUNE_MAX_COUNT=5000
      # N8N API Configuration
      - N8N_API_SWAGGER_UI_ENABLED=true
      # PostgreSQL Persistence Configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=pgvector
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${PGVECTOR_DB}
      - DB_POSTGRESDB_USER=${PGVECTOR_USER}
      - DB_POSTGRESDB_PASSWORD=${PGVECTOR_PASSWORD}
      - DB_POSTGRESDB_SSL=false
      - DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED=false
    depends_on:
      - redis
      - pgvector
    volumes:
      # Your can personnalize here local folder you need/want to share
      - ${SHARED_FOLDER}/Files:/files
      - ${SHARED_FOLDER}/Logs:/files/logs
      - ${SHARED_FOLDER}/Backups:/files/backups
    networks:
      - n8n_network

  redis:
    image: redis/redis-stack:latest
    container_name: redis-service
    restart: unless-stopped
    ports:
      - "6379:6379"
      - "8001:8001"
    environment:
      - REDIS_ARGS=--requirepass ${REDIS_PASSWORD} --appendonly yes --save 900 1 --save 300 10 --save 60 10000 --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - n8n_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  pgvector:
    image: pgvector/pgvector:pg17
    container_name: pgvector-service
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${PGVECTOR_DB}
      POSTGRES_USER: ${PGVECTOR_USER}
      POSTGRES_PASSWORD: ${PGVECTOR_PASSWORD}
    volumes:
      - pgvector_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - n8n_network

